---
title: "r_bargraph_Backshore_detailEPR"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}
library(ggplot2)
library(dplyr)
library(readr)
```

```{r}
# Load the data
file_path <- "C:/UNI/All values.csv"
save_dir <- "C:/UNI/Artigo1/Figuras"
base_filename <- "Backshore_detailMorphology_EPRaverage_bargraph_v"

# Function to generate a new versioned filename
get_new_version_filename <- function(base_filename, save_dir) {
  version <- 1
  while (TRUE) {
    filename <- paste0(base_filename, version, ".png")
    full_path <- file.path(save_dir, filename)
    if (!file.exists(full_path)) {
      return(list(full_path, version))
    }
    version <- version + 1
  }
}

# Create a mapping for the backshore types
backshore_mapping <- c(
  "1" = "Very low bluffs with low ice-wedge degradation",
  "2" = "Low bluffs with low ice-wedge degradation",
  "3" = "Medium bluffs with low ice-wedge degradation",
  "4" = "Inundated tundra flats and polygons",
  "5" = "Intertidal inundated flats with wetlands",
  "6" = "Barrier Beaches and Sandspits",
  "7" = "Very low bluffs with high ice-wedge degradation",
  "8" = "Low bluffs with high ice-wedge degradation",
  "9" = "Medium bluffs with high ice-wedge degradation",
  "10" = "Slump toe bluffs"
)

# Ensure Average_EPR is calculated correctly
average_epr <- data %>%
  group_by(Backshore_detail) %>%
  summarise(Average_EPR = mean(EPR, na.rm = TRUE)) %>%
  arrange(desc(Average_EPR))

# Create a mapping for colors based on original numeric values
color_mapping <- c(
  "1" = "lightsalmon",
  "2" = "lightsalmon",
  "3" = "lightsalmon",
  "4" = "limegreen",
  "5" = "limegreen",
  "6" = "darkgoldenrod",
  "7" = "darkviolet",
  "8" = "darkviolet",
  "9" = "darkviolet",
  "10" = "lightsalmon"
)

# Create a new column with the original numeric identifiers for Backshore_detail
average_epr$Original_ID <- sapply(average_epr$Backshore_detail, function(x) {
  match(x, backshore_mapping)
})

# Assign colors based on Original_ID
average_epr$color <- color_mapping[as.character(average_epr$Original_ID)]

# Check the data before plotting
print(average_epr)
```

```{r}
# Plot the horizontal bar chart with inverted x-axis
p <- ggplot(average_epr, aes(x = Average_EPR, y = reorder(Backshore_detail, -Average_EPR), fill = color)) +
  geom_bar(stat = "identity", width = 0.7) +
  geom_text(aes(label = round(Average_EPR, 2), hjust = -0.1), size = 5) +
  scale_fill_identity() +  # Use scale_fill_identity to map colors directly
  labs(title = "(b) Shoreline Change Rates per Backshore Group Morphology (1950-2020)") +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(size = 16, hjust = 0.5, vjust = 1),
    axis.text.x = element_text(size = 14),
    axis.text.y = element_text(size = 14),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    panel.grid.major.y = element_blank(),
    panel.grid.minor.y = element_blank()
  ) +
  scale_x_reverse()  # Invert the x-axis

# Get new versioned filename
save_path <- get_new_version_filename(base_filename, save_dir)[[1]]

# Save the plot
ggsave(save_path, plot = p, width = 12, height = 6)

# Print the saved path for confirmation
print(paste("Plot saved as:", save_path))
```
